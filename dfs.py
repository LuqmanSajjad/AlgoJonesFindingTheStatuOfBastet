import pygame
from random import choice, randrange

TILE = 50
cols, rows = 10,10
RES = WIDTH, HEIGHT = cols * TILE, rows * TILE
MARGIN = TILE // 4

pygame.init()
sc = pygame.display.set_mode(RES)
clock = pygame.time.Clock()

# x and y is coordinate 
def drawWall(x, y, orientation):
    x1, y1, x2, y2 = x, y, x, y
    if orientation == 'N':
        x1, y1, x2, y2 = x, y, x + 1, y
    elif orientation == 'S':
        x1, y1, x2, y2 = x, y + 1, x + 1, y + 1
    elif orientation == 'W':
        x1, y1, x2, y2 = x, y, x, y + 1
    elif orientation == 'E':
        x1, y1, x2, y2 = x + 1, y, x + 1, y + 1

    pygame.draw.line(sc, pygame.Color('orange'), (x1 * TILE, y1 * TILE), (x2 * TILE, y2 * TILE), 4)

def drawSquare(x, y, color):
    pygame.draw.rect(sc, pygame.Color(color), (x * TILE, y * TILE, TILE, TILE))

class Cell:
    def __init__(self, x, y):
        self.x, self.y = x, y
        self.walls = {'N': False, 'S': False, 'W': False, 'E': False}
        self.visited = False

    def draw(self):
        # draw sqaure
        if self.visited:
            drawSquare(self.x, self.y, 'blue')
        else: 
            drawSquare(self.x, self.y, 'black')
        
        for d in 'NSWE':
            if self.walls[d] == False:
                drawWall(self.x, self.y, d)

    def draw_current(self, color):
        drawSquare(self.x, self.y, color)

    def get_cell(self, x, y):
        if x < 0 or x > cols-1 or y < 0 or y > rows-1:
            return False
        return grid_cells[y][x]

    # direction is ENSW
    def check_neighbours(self):
        neighbours = []
        # retrieve all neighbour
        n = self.get_cell(self.x, self.y - 1)
        s = self.get_cell(self.x, self.y + 1)
        w = self.get_cell(self.x - 1, self.y)
        e = self.get_cell(self.x + 1, self.y)
        
        if n and not n.visited:
            if self.walls['N']:
                neighbours.append(n)
        if s and not s.visited:
            if self.walls['S']:
                neighbours.append(s)
        if w and not w.visited:
            if self.walls['W']:
                neighbours.append(w)
        if e and not e.visited:
            if self.walls['E']:
                neighbours.append(e)

        return choice(neighbours) if neighbours else False


grid_cells = [[Cell(x, y) for x in range(cols)] for y in range(rows)]


# 4 by 3 maze
# mazemap = {(1, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (2, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (4, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, (1, 2): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (3, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (3, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (4, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 0}}


# 5 by 5 maze
# mazemap = {(1, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (2, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (4, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 2): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (3, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 2): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, (5, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 3): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (2, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (3, 3): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (4, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (1, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (2, 4): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (3, 4): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (4, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 4): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (4, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 5): {'E': 0, 'W': 1, 'N': 1, 'S': 0}}

# assignment maze
mazemap = {(1, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, 
            (2, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, 
            (3, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, 
            (4, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, 
            (5, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 0},

            (1, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, 
            (2, 2): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, 
            (3, 2): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, 
            (4, 2): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, 
            (5, 2): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, 

            (1, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, 
            (2, 3): {'E': 1, 'W': 1, 'N': 1, 'S': 1}, 
            (3, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, 
            (4, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, 
            (5, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, 

            (1, 4): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, 
            (2, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, 
            (3, 4): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, 
            (4, 4): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, 
            (5, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, 

            (1, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, 
            (2, 5): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, 
            (3, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, 
            (4, 5): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, 
            (5, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 0}}


# 10 by 10 maze with loop
mazemap = {(1, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (3, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (4, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (5, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (6, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (7, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (8, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (9, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (4, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (5, 2): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (6, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (7, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, (8, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (9, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (10, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 3): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (2, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (3, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (5, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (6, 3): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (7, 3): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (8, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (9, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (10, 3): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (1, 4): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 4): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (4, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (5, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (6, 4): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (7, 4): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (8, 4): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (9, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 4): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (1, 5): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (2, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 5): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (4, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, (5, 5): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (6, 5): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (7, 5): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (8, 5): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (9, 5): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (10, 5): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 6): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 6): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 6): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (4, 6): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (5, 6): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (6, 6): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (7, 6): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (8, 6): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (9, 6): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (10, 6): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 7): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 7): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (3, 7): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (4, 7): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (5, 7): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (6, 7): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (7, 7): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (8, 7): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (9, 7): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (10, 7): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (1, 8): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (2, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 8): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (4, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, (6, 8): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (7, 8): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (8, 8): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (9, 8): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, (10, 8): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 9): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 9): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 9): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (4, 9): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (5, 9): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (6, 9): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (7, 9): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (8, 9): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (9, 9): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 9): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (1, 10): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (2, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (3, 10): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (5, 10): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (6, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (7, 10): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (8, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (9, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 0}}

mazemap = {(1, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (3, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (4, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (5, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (6, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (9, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (10, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (2, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (3, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (4, 2): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (5, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (6, 2): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (7, 2): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 2): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (9, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (10, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (5, 3): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (6, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (7, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (8, 3): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (9, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (10, 3): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 4): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (2, 4): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (3, 4): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (4, 4): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (5, 4): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (6, 4): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (7, 4): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (8, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (9, 4): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (10, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 5): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 5): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (4, 5): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (5, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (6, 5): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (7, 5): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (8, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (9, 5): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (10, 5): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (1, 6): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (2, 6): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (3, 6): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (4, 6): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (5, 6): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (6, 6): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (7, 6): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (8, 6): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (9, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 6): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (1, 7): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 7): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 7): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 7): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (5, 7): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (6, 7): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, (7, 7): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (8, 7): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (9, 7): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 7): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 8): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (2, 8): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (3, 8): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (4, 8): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (5, 8): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (6, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 8): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (8, 8): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (9, 8): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (10, 8): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, (1, 9): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (2, 9): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (3, 9): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (4, 9): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 9): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (6, 9): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (7, 9): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (8, 9): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, (9, 9): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (10, 9): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 10): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (3, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (4, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (6, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (7, 10): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (8, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (9, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 0}}


## red flag
# mazemap = {(1, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (3, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (4, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (5, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (6, 1): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (8, 1): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (9, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (10, 1): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (2, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (3, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (4, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (5, 2): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (6, 2): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (7, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (8, 2): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (9, 2): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (10, 2): {'E': 0, 'W': 1, 'N': 0, 'S': 0}, (1, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 3): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (4, 3): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (5, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (6, 3): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (7, 3): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 3): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (9, 3): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (10, 3): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1, 4): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (3, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (4, 4): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (5, 4): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (6, 4): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (7, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (9, 4): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 4): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (1, 5): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (2, 5): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (3, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (4, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 0}, (5, 5): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (6, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 5): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 5): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (9, 5): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (10, 5): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 6): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 6): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (3, 6): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (4, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (5, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (6, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 6): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 6): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (9, 6): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (10, 6): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 7): {'E': 1, 'W': 0, 'N': 0, 'S': 0}, (2, 7): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (3, 7): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (4, 7): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (5, 7): {'E': 1, 'W': 0, 'N': 1, 'S': 1}, (6, 7): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 7): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 7): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (9, 7): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (10, 7): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 8): {'E': 1, 'W': 1, 'N': 0, 'S': 1}, (2, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 8): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (4, 8): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (5, 8): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (6, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 8): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (9, 8): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (10, 8): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (1, 9): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (2, 9): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (3, 9): {'E': 0, 'W': 1, 'N': 1, 'S': 0}, (4, 9): {'E': 1, 'W': 1, 'N': 0, 'S': 0}, (5, 9): {'E': 0, 'W': 0, 'N': 0, 'S': 1}, (6, 9): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 9): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 9): {'E': 1, 'W': 0, 'N': 1, 'S': 0}, (9, 9): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (10, 9): {'E': 1, 'W': 1, 'N': 1, 'S': 0}, (1, 10): {'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (4, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (5, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (6, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (7, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (8, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 1}, (9, 10): {'E': 0, 'W': 0, 'N': 1, 'S': 1}, (10, 10): {'E': 0, 'W': 1, 'N': 1, 'S': 0}}

# demo maze 3 by 4
# mazemap = {(1, 1): {'E': 1, 'W': 0, 'N': 0, 'S': 1}, (2, 1):{'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3,1):{'E': 0, 'W': 0, 'N': 1, 'S': 0}, (1,2):{'E': 1, 'W': 1, 'N': 0, 'S': 1}, (2,2):{'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3,2):{'E': 0, 'W': 0, 'N': 1, 'S': 0}, (1,3):{'E': 1, 'W': 1, 'N': 0, 'S': 0}, (2,3):{'E': 0, 'W': 0, 'N': 0, 'S': 1}, (3,3):{'E': 1, 'W': 0, 'N': 1, 'S': 0}, (1,4):{'E': 0, 'W': 1, 'N': 0, 'S': 1}, (2,4):{'E': 0, 'W': 0, 'N': 1, 'S': 1}, (3,4):{'E': 0, 'W': 1, 'N': 1, 'S': 0}}

for y in range(rows):
    for x in range(cols):
        newCell = Cell(x, y)
        walls = mazemap[(y+1, x+1)]
        for d in 'EWNS':
            if walls[d] == 1:
                newCell.walls[d] = True
            else:
                newCell.walls[d] = False
        grid_cells[y][x] = newCell

stack = []

# current_cell = grid_cells[0][0]
# current_cell.visited = True
# current_cell.draw_current('red')
x, y = 0,0

current = grid_cells[y][x]

steps = 0
visited = 0

while True:

    sc.fill(pygame.Color('darkslategray'))

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            exit()

    for i in range(rows):
        for j in range(cols):
            grid_cells[i][j].draw()

    if (current.visited == False):
        current.visited = True
        visited += 1
    current.draw_current('red')

    # randomly choose unvisited neighbours
    next = current.check_neighbours()
    
    if next:
        stack.append(current)
        current = next
        steps += 1
    else:
        if stack:
            current = stack.pop()
            steps += 1

    pygame.display.flip()
    clock.tick(10)

    if (visited == rows * cols):
        for i in range(rows):
            for j in range(cols):
                grid_cells[i][j].visited = False
        current = grid_cells[0][0]
        visited = 0
        print(steps)
        